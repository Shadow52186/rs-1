const axios = require("axios");
const User = require("../Models/User");
const TopupHistory = require("../Models/TopupHistory");

exports.verifySlip = async (req, res) => {
  const { qrcode_text } = req.body;
  const qrcode = qrcode_text;
  const userId = req.user.id;

  if (!qrcode) {
    return res.status(400).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö QR Code" });
  }

  try {
    const form = new URLSearchParams({
      qrcode_text: qrcode,
      keyapi: process.env.BYSHOP_API_KEY,
    });

    const response = await axios.post(
      "https://byshop.me/api/check_slip",
      form.toString(),
      {
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
      }
    );

    const data = response.data;

    // ‚ùå ‡∏ñ‡πâ‡∏≤ QR ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
    if (data.check_slip === 1) {
      return res.status(409).json({ error: "‡∏™‡∏•‡∏¥‡∏õ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß" });
    }

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏•‡∏¥‡∏õ
    const slipTimestamp = new Date(data.slip_time).getTime();
    const now = Date.now();
    const fiveMinutes = 5 * 60 * 1000;

    if (now - slipTimestamp > fiveMinutes) {
      return res
        .status(400)
        .json({ error: "‚ùå ‡∏™‡∏•‡∏¥‡∏õ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ" });
    }

    // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏™‡∏•‡∏¥‡∏õ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÉ‡∏ä‡πâ
    if (data.status === 1 && data.check_slip === 0) {
      const amount = parseFloat(data.amount);

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const user = await User.findById(userId);
      if (!user) return res.status(404).json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" });

      user.point += amount;
      await user.save();

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
      await TopupHistory.create({
        userId: userId, // ‚úÖ ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö field ‡πÉ‡∏ô Schema
        amount,
        transaction_id: data.slip_ref,
        slip_time: data.slip_time,
        sender: data.sender,
        receiver: data.receiver,
        method: "bank", // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°
      });

      return res.json({
        status: "success",
        message: "‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
        amount,
        balance: user.point, // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å user.balance ‚Üí user.point
        transaction_id: data.slip_ref, // ‚úÖ ‡πÅ‡∏Å‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ!
      });
    } else {
      return res.status(400).json({ error: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" });
    }
  } catch (err) {
    console.error("‚ùå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", err);
    console.log("üì¶ req.body:", req.body);

    return res.status(500).json({ error: "‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ" });
  }
};
